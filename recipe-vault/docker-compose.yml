version: '3.8'

services:
  frontend:
    build:
      context: ./  # Use the root folder for the frontend React app
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
    depends_on:
      - api-gateway
    networks:
      - app-network

  user-service:
    build:
      context: ./user-service
    command: python app.py
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=recipe_vault
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  recipe-service:
    build:
      context: ./recipe-service
    ports:
      - "3000:3000"
    environment:
      - MONGO_URL=mongodb://mongo:27017/recipe_vault
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  api-gateway:
    build:
      context: ./api-gateway
    ports:
      - "4000:4000"
    depends_on:
      - user-service
      - recipe-service
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: db
    restart: always
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=recipe_vault
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
